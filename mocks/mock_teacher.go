// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/arong/dean/models (interfaces: TeacherStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/arong/dean/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTeacherStore is a mock of TeacherStore interface
type MockTeacherStore struct {
	ctrl     *gomock.Controller
	recorder *MockTeacherStoreMockRecorder
}

// MockTeacherStoreMockRecorder is the mock recorder for MockTeacherStore
type MockTeacherStoreMockRecorder struct {
	mock *MockTeacherStore
}

// NewMockTeacherStore creates a new mock instance
func NewMockTeacherStore(ctrl *gomock.Controller) *MockTeacherStore {
	mock := &MockTeacherStore{ctrl: ctrl}
	mock.recorder = &MockTeacherStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTeacherStore) EXPECT() *MockTeacherStoreMockRecorder {
	return m.recorder
}

// DeleteTeacher mocks base method
func (m *MockTeacherStore) DeleteTeacher(arg0 []int64) error {
	ret := m.ctrl.Call(m, "DeleteTeacher", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTeacher indicates an expected call of DeleteTeacher
func (mr *MockTeacherStoreMockRecorder) DeleteTeacher(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTeacher", reflect.TypeOf((*MockTeacherStore)(nil).DeleteTeacher), arg0)
}

// SaveTeacher mocks base method
func (m *MockTeacherStore) SaveTeacher(arg0 models.Teacher) (int64, error) {
	ret := m.ctrl.Call(m, "SaveTeacher", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveTeacher indicates an expected call of SaveTeacher
func (mr *MockTeacherStoreMockRecorder) SaveTeacher(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTeacher", reflect.TypeOf((*MockTeacherStore)(nil).SaveTeacher), arg0)
}

// UpdateTeacher mocks base method
func (m *MockTeacherStore) UpdateTeacher(arg0 models.Teacher) error {
	ret := m.ctrl.Call(m, "UpdateTeacher", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTeacher indicates an expected call of UpdateTeacher
func (mr *MockTeacherStoreMockRecorder) UpdateTeacher(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTeacher", reflect.TypeOf((*MockTeacherStore)(nil).UpdateTeacher), arg0)
}
