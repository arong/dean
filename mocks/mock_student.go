// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/arong/dean/models (interfaces: StudentStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/arong/dean/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStudentStore is a mock of StudentStore interface
type MockStudentStore struct {
	ctrl     *gomock.Controller
	recorder *MockStudentStoreMockRecorder
}

// MockStudentStoreMockRecorder is the mock recorder for MockStudentStore
type MockStudentStoreMockRecorder struct {
	mock *MockStudentStore
}

// NewMockStudentStore creates a new mock instance
func NewMockStudentStore(ctrl *gomock.Controller) *MockStudentStore {
	mock := &MockStudentStore{ctrl: ctrl}
	mock.recorder = &MockStudentStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStudentStore) EXPECT() *MockStudentStoreMockRecorder {
	return m.recorder
}

// DeleteStudent mocks base method
func (m *MockStudentStore) DeleteStudent(arg0 []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStudent", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStudent indicates an expected call of DeleteStudent
func (mr *MockStudentStoreMockRecorder) DeleteStudent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStudent", reflect.TypeOf((*MockStudentStore)(nil).DeleteStudent), arg0)
}

// SaveStudent mocks base method
func (m *MockStudentStore) SaveStudent(arg0 models.StudentInfo) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveStudent", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveStudent indicates an expected call of SaveStudent
func (mr *MockStudentStoreMockRecorder) SaveStudent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveStudent", reflect.TypeOf((*MockStudentStore)(nil).SaveStudent), arg0)
}

// UpdateStudent mocks base method
func (m *MockStudentStore) UpdateStudent(arg0 models.StudentInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStudent", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStudent indicates an expected call of UpdateStudent
func (mr *MockStudentStoreMockRecorder) UpdateStudent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStudent", reflect.TypeOf((*MockStudentStore)(nil).UpdateStudent), arg0)
}
