// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/arong/dean/models (interfaces: SubjectStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/arong/dean/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSubjectStore is a mock of SubjectStore interface
type MockSubjectStore struct {
	ctrl     *gomock.Controller
	recorder *MockSubjectStoreMockRecorder
}

// MockSubjectStoreMockRecorder is the mock recorder for MockSubjectStore
type MockSubjectStoreMockRecorder struct {
	mock *MockSubjectStore
}

// NewMockSubjectStore creates a new mock instance
func NewMockSubjectStore(ctrl *gomock.Controller) *MockSubjectStore {
	mock := &MockSubjectStore{ctrl: ctrl}
	mock.recorder = &MockSubjectStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSubjectStore) EXPECT() *MockSubjectStoreMockRecorder {
	return m.recorder
}

// DeleteSubject mocks base method
func (m *MockSubjectStore) DeleteSubject(arg0 int) error {
	ret := m.ctrl.Call(m, "DeleteSubject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSubject indicates an expected call of DeleteSubject
func (mr *MockSubjectStoreMockRecorder) DeleteSubject(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSubject", reflect.TypeOf((*MockSubjectStore)(nil).DeleteSubject), arg0)
}

// SaveSubject mocks base method
func (m *MockSubjectStore) SaveSubject(arg0 models.SubjectInfo) (int, error) {
	ret := m.ctrl.Call(m, "SaveSubject", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveSubject indicates an expected call of SaveSubject
func (mr *MockSubjectStoreMockRecorder) SaveSubject(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveSubject", reflect.TypeOf((*MockSubjectStore)(nil).SaveSubject), arg0)
}

// UpdateSubject mocks base method
func (m *MockSubjectStore) UpdateSubject(arg0 models.SubjectInfo) error {
	ret := m.ctrl.Call(m, "UpdateSubject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSubject indicates an expected call of UpdateSubject
func (mr *MockSubjectStoreMockRecorder) UpdateSubject(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSubject", reflect.TypeOf((*MockSubjectStore)(nil).UpdateSubject), arg0)
}
